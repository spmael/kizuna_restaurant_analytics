# Generated by Django 4.2.7 on 2025-08-10 18:53

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Product Name")),
                (
                    "name_fr",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="French Name"
                    ),
                ),
                (
                    "name_en",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="English Name"
                    ),
                ),
                (
                    "current_selling_price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                        verbose_name="Current Selling Price",
                    ),
                ),
                (
                    "current_cost_per_unit",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                        verbose_name="Current Cost Per Unit",
                    ),
                ),
                (
                    "current_stock",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Stock"
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this object.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_%(class)s_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product",
                "verbose_name_plural": "Products",
                "ordering": ["name", "sales_category", "purchase_category"],
            },
        ),
        migrations.CreateModel(
            name="PurchasesCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this object is active.",
                        verbose_name="Is active",
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="The date and time this object was deleted.",
                        null=True,
                        verbose_name="Deleted at",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Name")),
                (
                    "name_fr",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="French Name"
                    ),
                ),
                (
                    "name_en",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="English Name"
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "sort_order",
                    models.PositiveIntegerField(default=0, verbose_name="Sort Order"),
                ),
            ],
            options={
                "verbose_name": "Purchases Category",
                "verbose_name_plural": "Purchases Categories",
                "ordering": ["sort_order", "name"],
            },
        ),
        migrations.CreateModel(
            name="Recipe",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "dish_name",
                    models.CharField(max_length=255, verbose_name="Dish Name"),
                ),
                (
                    "dish_name_fr",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="French Dish Name"
                    ),
                ),
                (
                    "dish_name_en",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="English Dish Name"
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this object.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_%(class)s_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last updated this object.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_%(class)s_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updated by",
                    ),
                ),
            ],
            options={
                "verbose_name": "Recipe",
                "verbose_name_plural": "Recipes",
                "ordering": ["dish_name"],
            },
        ),
        migrations.CreateModel(
            name="SalesCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this object is active.",
                        verbose_name="Is active",
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="The date and time this object was deleted.",
                        null=True,
                        verbose_name="Deleted at",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Name")),
                (
                    "name_fr",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="French Name"
                    ),
                ),
                (
                    "name_en",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="English Name"
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "sort_order",
                    models.PositiveIntegerField(default=0, verbose_name="Sort Order"),
                ),
            ],
            options={
                "verbose_name": "Sales Category",
                "verbose_name_plural": "Sales Categories",
                "ordering": ["sort_order", "name"],
            },
        ),
        migrations.CreateModel(
            name="UnitOfMeasure",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this object is active.",
                        verbose_name="Is active",
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="The date and time this object was deleted.",
                        null=True,
                        verbose_name="Deleted at",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Name")),
                (
                    "abbreviation",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Abbreviation"
                    ),
                ),
                (
                    "name_fr",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="French Name"
                    ),
                ),
                (
                    "name_en",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="English Name"
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "sort_order",
                    models.PositiveIntegerField(default=0, verbose_name="Sort Order"),
                ),
            ],
            options={
                "verbose_name": "Unit of Measure",
                "verbose_name_plural": "Units of Measure",
                "ordering": ["sort_order", "name"],
            },
        ),
        migrations.CreateModel(
            name="Supplier",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this object.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_%(class)s_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last updated this object.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_%(class)s_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updated by",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Sales",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("sale_date", models.DateField(verbose_name="Sale Date")),
                (
                    "order_number",
                    models.CharField(max_length=255, verbose_name="Order Number"),
                ),
                (
                    "quantity_sold",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Quantity Sold"
                    ),
                ),
                (
                    "unit_sale_price",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Unit Price"
                    ),
                ),
                (
                    "total_sale_price",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Total Sale Price"
                    ),
                ),
                (
                    "customer",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Customer Name",
                    ),
                ),
                (
                    "cashier",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Cashier Name",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this object.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_%(class)s_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sales",
                        to="restaurant_data.product",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last updated this object.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_%(class)s_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updated by",
                    ),
                ),
            ],
            options={
                "verbose_name": "Sale",
                "verbose_name_plural": "Sales",
                "ordering": ["sale_date", "product"],
            },
        ),
        migrations.CreateModel(
            name="RecipeIngredient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantity",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=10,
                        verbose_name="Quantity",
                    ),
                ),
                (
                    "main_ingredient",
                    models.BooleanField(default=False, verbose_name="Main Ingredient"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this object.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_%(class)s_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "ingredient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="recipes",
                        to="restaurant_data.product",
                    ),
                ),
                (
                    "recipe",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ingredients",
                        to="restaurant_data.recipe",
                    ),
                ),
                (
                    "unit_of_recipe",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="recipe_ingredients",
                        to="restaurant_data.unitofmeasure",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last updated this object.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_%(class)s_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updated by",
                    ),
                ),
            ],
            options={
                "verbose_name": "Recipe Ingredient",
                "verbose_name_plural": "Recipe Ingredients",
                "ordering": ["recipe", "ingredient"],
            },
        ),
        migrations.CreateModel(
            name="Purchase",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("purchase_date", models.DateField(verbose_name="Purchase Date")),
                (
                    "quantity_purchased",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        verbose_name="Quantity Purchased",
                    ),
                ),
                (
                    "total_cost",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Total Cost"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this object.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_%(class)s_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="purchases",
                        to="restaurant_data.product",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last updated this object.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_%(class)s_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updated by",
                    ),
                ),
            ],
            options={
                "verbose_name": "Purchase",
                "verbose_name_plural": "Purchases",
                "ordering": ["purchase_date", "product"],
            },
        ),
        migrations.CreateModel(
            name="ProductType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "cost_type",
                    models.CharField(
                        choices=[
                            (
                                "raw_material_costs",
                                "Raw Materials (Food, Beverages, Ingredients)",
                            ),
                            ("labor_salaries_kitchen", "Salaries (Kitchen)"),
                            ("labor_salaries_service", "Salaries (Service)"),
                            ("labor_salaries_admin", "Salaries (Administration)"),
                            ("labor_social_charges", "Social Charges"),
                            ("labor_contractors", "Contractors / Freelance"),
                            ("variable_utilities_water", "Variable Costs (Water)"),
                            ("variable_utilities_gas", "Variable Costs (Gas)"),
                            (
                                "variable_utilities_electricity",
                                "Variable Costs (Electricity)",
                            ),
                            (
                                "variable_supplies",
                                "Supplies (Kitchen Supplies / Bar Supplies)",
                            ),
                            ("variable_cleaning", "Cleaning Supplies"),
                            ("variable_packaging", "Packaging"),
                            (
                                "variable_commissions",
                                "Commissions (Delivery / Payment)",
                            ),
                            ("fixed_rent", "Rent"),
                            ("fixed_insurance", "Insurance"),
                            (
                                "fixed_subscriptions",
                                "Subscriptions (Odoo, Streamlit, etc.)",
                            ),
                            ("fixed_erp", "ERP & POS Services"),
                            ("fixed_communications", "Communications & Internet"),
                            ("fixed_accounting", "Accounting & Legal Services"),
                            ("marketing_social_media", "Marketing (Social Media)"),
                            ("marketing_flyers", "Marketing (Flyers, Banners)"),
                            ("marketing_event", "Marketing (Events)"),
                            ("maintenance_equipment", "Maintenance Equipment"),
                            ("maintenance_local", "Maintenance (Local)"),
                            (
                                "fixed_assets_equipment",
                                "Fixed Assets (Kitchen Equipment, POS)",
                            ),
                            (
                                "fixed_assets_improvements",
                                "Fixed Assets (Repairs, Painting, Flooring)",
                            ),
                            ("fixed_assets_furniture", "Fixed Assets (Furniture)"),
                            ("fixed_assets_vehicles", "Fixed Assets (Vehicles)"),
                            ("fixed_assets_it", "Fixed Assets (IT)"),
                            ("taxes_local", "Local Taxes"),
                            ("taxes_licensing", "Licenses & Permits"),
                            ("taxes_vat", "VAT / Taxes"),
                            ("misc_bank_fees", "Bank Fees"),
                            ("misc_training", "Training"),
                            ("misc_other", "Other Miscellaneous"),
                        ],
                        default="raw_material_costs",
                        max_length=255,
                        verbose_name="Cost Type",
                    ),
                ),
                (
                    "cost_type_fr",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Cost Type French"
                    ),
                ),
                (
                    "cost_type_en",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Cost Type English"
                    ),
                ),
                (
                    "product_type",
                    models.CharField(
                        choices=[
                            ("dish", "Prepared Dish"),
                            ("resale", "Direct Buy/Resale Product"),
                        ],
                        default="resale",
                        max_length=255,
                        verbose_name="Product Type",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this object.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_%(class)s_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="product_cost_types",
                        to="restaurant_data.product",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last updated this object.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_%(class)s_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updated by",
                    ),
                ),
            ],
            options={
                "verbose_name": "Purchase Cost Type",
                "verbose_name_plural": "Purchase Cost Types",
                "ordering": ["cost_type"],
            },
        ),
        migrations.CreateModel(
            name="ProductConsolidation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "consolidated_products",
                    models.JSONField(
                        default=list,
                        help_text="List of product IDs that are consolidated into the primary product",
                    ),
                ),
                (
                    "similarity_scores",
                    models.JSONField(
                        default=dict,
                        help_text="Dictionary mapping product_id to similarity score",
                    ),
                ),
                (
                    "consolidation_reason",
                    models.CharField(
                        help_text="Reason for consolidation (e.g., 'fuzzy_name_match', 'category_similarity')",
                        max_length=100,
                        verbose_name="Consolidation Reason",
                    ),
                ),
                (
                    "confidence_score",
                    models.DecimalField(
                        decimal_places=3,
                        help_text="Overall confidence in this consolidation (0-1)",
                        max_digits=5,
                        verbose_name="Confidence Score",
                    ),
                ),
                (
                    "is_verified",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this consolidation has been manually verified",
                        verbose_name="Verified",
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        help_text="Notes about why these products are considered similar",
                        verbose_name="Notes",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this object.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_%(class)s_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "primary_product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="primary_consolidations",
                        to="restaurant_data.product",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last updated this object.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_%(class)s_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updated by",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product Consolidation",
                "verbose_name_plural": "Product Consolidations",
                "ordering": ["-confidence_score"],
            },
        ),
        migrations.AddField(
            model_name="product",
            name="purchase_category",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="products",
                to="restaurant_data.purchasescategory",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="sales_category",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="products",
                to="restaurant_data.salescategory",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="unit_of_measure",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="products",
                to="restaurant_data.unitofmeasure",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="updated_by",
            field=models.ForeignKey(
                blank=True,
                help_text="The user who last updated this object.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="updated_%(class)s_set",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Updated by",
            ),
        ),
        migrations.CreateModel(
            name="UnitConversion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "conversion_factor",
                    models.DecimalField(
                        decimal_places=6,
                        help_text="Factor to multiply 'from_unit' to get 'to_unit' (e.g., 1 kg = 1000 g, so factor = 1000)",
                        max_digits=15,
                        verbose_name="Conversion Factor",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this conversion rule is active",
                        verbose_name="Active",
                    ),
                ),
                (
                    "priority",
                    models.PositiveIntegerField(
                        default=100,
                        help_text="Priority for applying conversions (lower number = higher priority)",
                        verbose_name="Priority",
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        help_text="Additional notes about this conversion",
                        verbose_name="Notes",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        help_text="Product category this conversion applies to (optional)",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="unit_conversions",
                        to="restaurant_data.purchasescategory",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this object.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_%(class)s_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "from_unit",
                    models.ForeignKey(
                        help_text="Unit to convert from",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="conversions_from",
                        to="restaurant_data.unitofmeasure",
                        verbose_name="From Unit",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        blank=True,
                        help_text="Specific product this conversion applies to (optional)",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="unit_conversions",
                        to="restaurant_data.product",
                    ),
                ),
                (
                    "to_unit",
                    models.ForeignKey(
                        help_text="Unit to convert to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="conversions_to",
                        to="restaurant_data.unitofmeasure",
                        verbose_name="To Unit",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last updated this object.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_%(class)s_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updated by",
                    ),
                ),
            ],
            options={
                "verbose_name": "Unit Conversion",
                "verbose_name_plural": "Unit Conversions",
                "ordering": ["priority", "from_unit", "to_unit"],
                "indexes": [
                    models.Index(
                        fields=["from_unit", "to_unit"],
                        name="restaurant__from_un_04b777_idx",
                    ),
                    models.Index(
                        fields=["product"], name="restaurant__product_75a133_idx"
                    ),
                    models.Index(
                        fields=["category"], name="restaurant__categor_d919b4_idx"
                    ),
                    models.Index(
                        fields=["is_active"], name="restaurant__is_acti_18d52c_idx"
                    ),
                ],
                "unique_together": {
                    ("from_unit", "to_unit", "product"),
                    ("from_unit", "to_unit", "category"),
                },
            },
        ),
        migrations.CreateModel(
            name="StandardKitchenUnit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this standard is active",
                        verbose_name="Active",
                    ),
                ),
                (
                    "priority",
                    models.PositiveIntegerField(
                        default=100,
                        help_text="Priority for applying standards (lower number = higher priority)",
                        verbose_name="Priority",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Description of why this standard unit is used",
                        verbose_name="Description",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        help_text="Product category this standard applies to",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="standard_kitchen_units",
                        to="restaurant_data.purchasescategory",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this object.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_%(class)s_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        blank=True,
                        help_text="Specific product this standard applies to",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="standard_kitchen_units",
                        to="restaurant_data.product",
                    ),
                ),
                (
                    "standard_unit",
                    models.ForeignKey(
                        help_text="Standard unit to use in kitchen/recipes for this category or product",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="standard_for_categories",
                        to="restaurant_data.unitofmeasure",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last updated this object.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_%(class)s_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updated by",
                    ),
                ),
            ],
            options={
                "verbose_name": "Standard Kitchen Unit",
                "verbose_name_plural": "Standard Kitchen Units",
                "ordering": ["priority", "category", "product"],
                "indexes": [
                    models.Index(
                        fields=["category"], name="restaurant__categor_3918b9_idx"
                    ),
                    models.Index(
                        fields=["product"], name="restaurant__product_9e9705_idx"
                    ),
                    models.Index(
                        fields=["is_active"], name="restaurant__is_acti_fb005c_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="ConsolidatedSales",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("sale_date", models.DateField(verbose_name="Sale Date")),
                (
                    "order_number",
                    models.CharField(max_length=255, verbose_name="Order Number"),
                ),
                (
                    "quantity_sold",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Quantity Sold"
                    ),
                ),
                (
                    "unit_sale_price",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Unit Price"
                    ),
                ),
                (
                    "total_sale_price",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Total Sale Price"
                    ),
                ),
                (
                    "customer",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Customer Name",
                    ),
                ),
                (
                    "cashier",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Cashier Name",
                    ),
                ),
                (
                    "consolidation_applied",
                    models.BooleanField(
                        default=False,
                        help_text="Whether consolidation rules were applied to this product",
                        verbose_name="Consolidation Applied",
                    ),
                ),
                (
                    "consolidated_product_names",
                    models.JSONField(
                        default=list,
                        help_text="List of all consolidated product names",
                        verbose_name="Consolidated Product Names",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this object.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_%(class)s_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="consolidated_sales",
                        to="restaurant_data.product",
                    ),
                ),
                (
                    "unit_of_recipe",
                    models.ForeignKey(
                        help_text="Unit of measure for the quantity used in recipes",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="consolidated_sales_as_recipe_unit",
                        to="restaurant_data.unitofmeasure",
                    ),
                ),
                (
                    "unit_of_sale",
                    models.ForeignKey(
                        help_text="Unit of measure for the quantity sold",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="consolidated_sales_as_sale_unit",
                        to="restaurant_data.unitofmeasure",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last updated this object.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_%(class)s_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updated by",
                    ),
                ),
            ],
            options={
                "verbose_name": "Consolidated Sale",
                "verbose_name_plural": "Consolidated Sales",
                "ordering": ["sale_date", "product"],
                "indexes": [
                    models.Index(
                        fields=["product"], name="restaurant__product_d04764_idx"
                    ),
                    models.Index(
                        fields=["sale_date"], name="restaurant__sale_da_a1f4be_idx"
                    ),
                    models.Index(
                        fields=["consolidation_applied"],
                        name="restaurant__consoli_18da80_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="ConsolidatedPurchases",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("purchase_date", models.DateField(verbose_name="Purchase Date")),
                (
                    "quantity_purchased",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        verbose_name="Quantity Purchased",
                    ),
                ),
                (
                    "total_cost",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Total Cost"
                    ),
                ),
                (
                    "consolidation_applied",
                    models.BooleanField(
                        default=False,
                        help_text="Whether consolidation rules were applied to this product",
                        verbose_name="Consolidation Applied",
                    ),
                ),
                (
                    "consolidated_product_names",
                    models.JSONField(
                        default=list,
                        help_text="List of all consolidated product names",
                        verbose_name="Consolidated Product Names",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this object.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_%(class)s_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="consolidated_purchases",
                        to="restaurant_data.product",
                    ),
                ),
                (
                    "unit_of_purchase",
                    models.ForeignKey(
                        help_text="Unit of measure for the quantity purchased",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="consolidated_purchases_as_purchase_unit",
                        to="restaurant_data.unitofmeasure",
                    ),
                ),
                (
                    "unit_of_recipe",
                    models.ForeignKey(
                        help_text="Unit of measure for the quantity used in recipes",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="consolidated_purchases_as_recipe_unit",
                        to="restaurant_data.unitofmeasure",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last updated this object.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_%(class)s_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updated by",
                    ),
                ),
            ],
            options={
                "verbose_name": "Consolidated Purchase",
                "verbose_name_plural": "Consolidated Purchases",
                "ordering": ["purchase_date", "product"],
                "indexes": [
                    models.Index(
                        fields=["product"], name="restaurant__product_ab59f8_idx"
                    ),
                    models.Index(
                        fields=["purchase_date"], name="restaurant__purchas_6fae28_idx"
                    ),
                    models.Index(
                        fields=["consolidation_applied"],
                        name="restaurant__consoli_05d012_idx",
                    ),
                ],
            },
        ),
    ]
